package com.demoo.btrace.flink.domain;

import java.io.Serializable;

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: pbSpan.proto
 *
 * @author zhxy
 * @Date 2021/7/1 4:26 下午
 */
public final class PbSpan implements Serializable {

    private PbSpan() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }

    public interface SpanOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional string parentId = 1;

        /**
         * <code>optional string parentId = 1;</code>
         */
        boolean hasParentId();

        /**
         * <code>optional string parentId = 1;</code>
         */
        String getParentId();

        /**
         * <code>optional string parentId = 1;</code>
         */
        com.google.protobuf.ByteString
        getParentIdBytes();

        // optional string id = 2;

        /**
         * <code>optional string id = 2;</code>
         */
        boolean hasId();

        /**
         * <code>optional string id = 2;</code>
         */
        String getId();

        /**
         * <code>optional string id = 2;</code>
         */
        com.google.protobuf.ByteString
        getIdBytes();

        // optional string traceId = 3;

        /**
         * <code>optional string traceId = 3;</code>
         */
        boolean hasTraceId();

        /**
         * <code>optional string traceId = 3;</code>
         */
        String getTraceId();

        /**
         * <code>optional string traceId = 3;</code>
         */
        com.google.protobuf.ByteString
        getTraceIdBytes();

        // optional .idl.Span.Kind kind = 4;

        /**
         * <code>optional .idl.Span.Kind kind = 4;</code>
         */
        boolean hasKind();

        /**
         * <code>optional .idl.Span.Kind kind = 4;</code>
         */
        com.demoo.btrace.flink.domain.PbSpan.Span.Kind getKind();

        // optional .idl.Span.Reference reference = 5;

        /**
         * <code>optional .idl.Span.Reference reference = 5;</code>
         */
        boolean hasReference();

        /**
         * <code>optional .idl.Span.Reference reference = 5;</code>
         */
        com.demoo.btrace.flink.domain.PbSpan.Span.Reference getReference();

        // optional string name = 6;

        /**
         * <code>optional string name = 6;</code>
         */
        boolean hasName();

        /**
         * <code>optional string name = 6;</code>
         */
        String getName();

        /**
         * <code>optional string name = 6;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        // optional sint64 timestamp = 7;

        /**
         * <code>optional sint64 timestamp = 7;</code>
         */
        boolean hasTimestamp();

        /**
         * <code>optional sint64 timestamp = 7;</code>
         */
        long getTimestamp();

        // optional sint64 duration = 8;

        /**
         * <code>optional sint64 duration = 8;</code>
         */
        boolean hasDuration();

        /**
         * <code>optional sint64 duration = 8;</code>
         */
        long getDuration();

        // optional string serviceName = 9;

        /**
         * <code>optional string serviceName = 9;</code>
         */
        boolean hasServiceName();

        /**
         * <code>optional string serviceName = 9;</code>
         */
        String getServiceName();

        /**
         * <code>optional string serviceName = 9;</code>
         */
        com.google.protobuf.ByteString
        getServiceNameBytes();

        // optional fixed32 ip = 10;

        /**
         * <code>optional fixed32 ip = 10;</code>
         */
        boolean hasIp();

        /**
         * <code>optional fixed32 ip = 10;</code>
         */
        int getIp();

        // repeated .idl.Span.Pair baggages = 11;

        /**
         * <code>repeated .idl.Span.Pair baggages = 11;</code>
         */
        java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair>
        getBaggagesList();

        /**
         * <code>repeated .idl.Span.Pair baggages = 11;</code>
         */
        com.demoo.btrace.flink.domain.PbSpan.Span.Pair getBaggages(int index);

        /**
         * <code>repeated .idl.Span.Pair baggages = 11;</code>
         */
        int getBaggagesCount();

        /**
         * <code>repeated .idl.Span.Pair baggages = 11;</code>
         */
        java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder>
        getBaggagesOrBuilderList();

        /**
         * <code>repeated .idl.Span.Pair baggages = 11;</code>
         */
        com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder getBaggagesOrBuilder(
                int index);

        // repeated .idl.Span.Pair tags = 12;

        /**
         * <code>repeated .idl.Span.Pair tags = 12;</code>
         */
        java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair>
        getTagsList();

        /**
         * <code>repeated .idl.Span.Pair tags = 12;</code>
         */
        com.demoo.btrace.flink.domain.PbSpan.Span.Pair getTags(int index);

        /**
         * <code>repeated .idl.Span.Pair tags = 12;</code>
         */
        int getTagsCount();

        /**
         * <code>repeated .idl.Span.Pair tags = 12;</code>
         */
        java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder>
        getTagsOrBuilderList();

        /**
         * <code>repeated .idl.Span.Pair tags = 12;</code>
         */
        com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder getTagsOrBuilder(
                int index);

        // repeated .idl.Span.Log logs = 13;

        /**
         * <code>repeated .idl.Span.Log logs = 13;</code>
         */
        java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Log>
        getLogsList();

        /**
         * <code>repeated .idl.Span.Log logs = 13;</code>
         */
        com.demoo.btrace.flink.domain.PbSpan.Span.Log getLogs(int index);

        /**
         * <code>repeated .idl.Span.Log logs = 13;</code>
         */
        int getLogsCount();

        /**
         * <code>repeated .idl.Span.Log logs = 13;</code>
         */
        java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.Span.LogOrBuilder>
        getLogsOrBuilderList();

        /**
         * <code>repeated .idl.Span.Log logs = 13;</code>
         */
        com.demoo.btrace.flink.domain.PbSpan.Span.LogOrBuilder getLogsOrBuilder(
                int index);
    }

    /**
     * Protobuf type {@code idl.Span}
     */
    public static final class Span extends
            com.google.protobuf.GeneratedMessage
            implements SpanOrBuilder {
        // Use Span.newBuilder() to construct.
        private Span(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private Span(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final Span defaultInstance;

        public static Span getDefaultInstance() {
            return defaultInstance;
        }

        public Span getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private Span(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            parentId_ = input.readBytes();
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            id_ = input.readBytes();
                            break;
                        }
                        case 26: {
                            bitField0_ |= 0x00000004;
                            traceId_ = input.readBytes();
                            break;
                        }
                        case 32: {
                            int rawValue = input.readEnum();
                            com.demoo.btrace.flink.domain.PbSpan.Span.Kind value = com.demoo.btrace.flink.domain.PbSpan.Span.Kind.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(4, rawValue);
                            } else {
                                bitField0_ |= 0x00000008;
                                kind_ = value;
                            }
                            break;
                        }
                        case 40: {
                            int rawValue = input.readEnum();
                            com.demoo.btrace.flink.domain.PbSpan.Span.Reference value = com.demoo.btrace.flink.domain.PbSpan.Span.Reference.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(5, rawValue);
                            } else {
                                bitField0_ |= 0x00000010;
                                reference_ = value;
                            }
                            break;
                        }
                        case 50: {
                            bitField0_ |= 0x00000020;
                            name_ = input.readBytes();
                            break;
                        }
                        case 56: {
                            bitField0_ |= 0x00000040;
                            timestamp_ = input.readSInt64();
                            break;
                        }
                        case 64: {
                            bitField0_ |= 0x00000080;
                            duration_ = input.readSInt64();
                            break;
                        }
                        case 74: {
                            bitField0_ |= 0x00000100;
                            serviceName_ = input.readBytes();
                            break;
                        }
                        case 85: {
                            bitField0_ |= 0x00000200;
                            ip_ = input.readFixed32();
                            break;
                        }
                        case 90: {
                            if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                                baggages_ = new java.util.ArrayList<com.demoo.btrace.flink.domain.PbSpan.Span.Pair>();
                                mutable_bitField0_ |= 0x00000400;
                            }
                            baggages_.add(input.readMessage(com.demoo.btrace.flink.domain.PbSpan.Span.Pair.PARSER, extensionRegistry));
                            break;
                        }
                        case 98: {
                            if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                                tags_ = new java.util.ArrayList<com.demoo.btrace.flink.domain.PbSpan.Span.Pair>();
                                mutable_bitField0_ |= 0x00000800;
                            }
                            tags_.add(input.readMessage(com.demoo.btrace.flink.domain.PbSpan.Span.Pair.PARSER, extensionRegistry));
                            break;
                        }
                        case 106: {
                            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                                logs_ = new java.util.ArrayList<com.demoo.btrace.flink.domain.PbSpan.Span.Log>();
                                mutable_bitField0_ |= 0x00001000;
                            }
                            logs_.add(input.readMessage(com.demoo.btrace.flink.domain.PbSpan.Span.Log.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                    baggages_ = java.util.Collections.unmodifiableList(baggages_);
                }
                if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                    tags_ = java.util.Collections.unmodifiableList(tags_);
                }
                if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                    logs_ = java.util.Collections.unmodifiableList(logs_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.demoo.btrace.flink.domain.PbSpan.Span.class, com.demoo.btrace.flink.domain.PbSpan.Span.Builder.class);
        }

        public static com.google.protobuf.Parser<Span> PARSER =
                new com.google.protobuf.AbstractParser<Span>() {
                    public Span parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new Span(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<Span> getParserForType() {
            return PARSER;
        }

        /**
         * Protobuf enum {@code idl.Span.Kind}
         */
        public enum Kind
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>SERVER = 0;</code>
             */
            SERVER(0, 0),
            /**
             * <code>CLIENT = 1;</code>
             */
            CLIENT(1, 1),
            /**
             * <code>PRODUCER = 2;</code>
             */
            PRODUCER(2, 2),
            /**
             * <code>CONSUMER = 3;</code>
             */
            CONSUMER(3, 3),
            /**
             * <code>KIND_UNKNOWN = 4;</code>
             */
            KIND_UNKNOWN(4, 4),
            ;

            /**
             * <code>SERVER = 0;</code>
             */
            public static final int SERVER_VALUE = 0;
            /**
             * <code>CLIENT = 1;</code>
             */
            public static final int CLIENT_VALUE = 1;
            /**
             * <code>PRODUCER = 2;</code>
             */
            public static final int PRODUCER_VALUE = 2;
            /**
             * <code>CONSUMER = 3;</code>
             */
            public static final int CONSUMER_VALUE = 3;
            /**
             * <code>KIND_UNKNOWN = 4;</code>
             */
            public static final int KIND_UNKNOWN_VALUE = 4;


            public final int getNumber() {
                return value;
            }

            public static Kind valueOf(int value) {
                switch (value) {
                    case 0:
                        return SERVER;
                    case 1:
                        return CLIENT;
                    case 2:
                        return PRODUCER;
                    case 3:
                        return CONSUMER;
                    case 4:
                        return KIND_UNKNOWN;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Kind>
            internalGetValueMap() {
                return internalValueMap;
            }

            private static com.google.protobuf.Internal.EnumLiteMap<Kind>
                    internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
                        public Kind findValueByNumber(int number) {
                            return Kind.valueOf(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(index);
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return com.demoo.btrace.flink.domain.PbSpan.Span.getDescriptor().getEnumTypes().get(0);
            }

            private static final Kind[] VALUES = values();

            public static Kind valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                return VALUES[desc.getIndex()];
            }

            private final int index;
            private final int value;

            private Kind(int index, int value) {
                this.index = index;
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:idl.Span.Kind)
        }

        /**
         * Protobuf enum {@code idl.Span.Reference}
         */
        public enum Reference
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>CHILD_OF = 0;</code>
             */
            CHILD_OF(0, 0),
            /**
             * <code>FOLLOWS_FROM = 1;</code>
             */
            FOLLOWS_FROM(1, 1),
            /**
             * <code>REFERENCE_UNKNOWN = 2;</code>
             */
            REFERENCE_UNKNOWN(2, 2),
            ;

            /**
             * <code>CHILD_OF = 0;</code>
             */
            public static final int CHILD_OF_VALUE = 0;
            /**
             * <code>FOLLOWS_FROM = 1;</code>
             */
            public static final int FOLLOWS_FROM_VALUE = 1;
            /**
             * <code>REFERENCE_UNKNOWN = 2;</code>
             */
            public static final int REFERENCE_UNKNOWN_VALUE = 2;


            public final int getNumber() {
                return value;
            }

            public static Reference valueOf(int value) {
                switch (value) {
                    case 0:
                        return CHILD_OF;
                    case 1:
                        return FOLLOWS_FROM;
                    case 2:
                        return REFERENCE_UNKNOWN;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Reference>
            internalGetValueMap() {
                return internalValueMap;
            }

            private static com.google.protobuf.Internal.EnumLiteMap<Reference>
                    internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Reference>() {
                        public Reference findValueByNumber(int number) {
                            return Reference.valueOf(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(index);
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return com.demoo.btrace.flink.domain.PbSpan.Span.getDescriptor().getEnumTypes().get(1);
            }

            private static final Reference[] VALUES = values();

            public static Reference valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                return VALUES[desc.getIndex()];
            }

            private final int index;
            private final int value;

            private Reference(int index, int value) {
                this.index = index;
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:idl.Span.Reference)
        }

        public interface PairOrBuilder
                extends com.google.protobuf.MessageOrBuilder {

            // optional string key = 1;

            /**
             * <code>optional string key = 1;</code>
             */
            boolean hasKey();

            /**
             * <code>optional string key = 1;</code>
             */
            String getKey();

            /**
             * <code>optional string key = 1;</code>
             */
            com.google.protobuf.ByteString
            getKeyBytes();

            // optional string value = 2;

            /**
             * <code>optional string value = 2;</code>
             */
            boolean hasValue();

            /**
             * <code>optional string value = 2;</code>
             */
            String getValue();

            /**
             * <code>optional string value = 2;</code>
             */
            com.google.protobuf.ByteString
            getValueBytes();
        }

        /**
         * Protobuf type {@code idl.Span.Pair}
         */
        public static final class Pair extends
                com.google.protobuf.GeneratedMessage
                implements PairOrBuilder {
            // Use Pair.newBuilder() to construct.
            private Pair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
                super(builder);
                this.unknownFields = builder.getUnknownFields();
            }

            private Pair(boolean noInit) {
                this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }

            private static final Pair defaultInstance;

            public static Pair getDefaultInstance() {
                return defaultInstance;
            }

            public Pair getDefaultInstanceForType() {
                return defaultInstance;
            }

            private final com.google.protobuf.UnknownFieldSet unknownFields;

            @Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }

            private Pair(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                initFields();
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownField(input, unknownFields,
                                        extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {
                                bitField0_ |= 0x00000001;
                                key_ = input.readBytes();
                                break;
                            }
                            case 18: {
                                bitField0_ |= 0x00000002;
                                value_ = input.readBytes();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e.getMessage()).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_Pair_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_Pair_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.demoo.btrace.flink.domain.PbSpan.Span.Pair.class, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder.class);
            }

            public static com.google.protobuf.Parser<Pair> PARSER =
                    new com.google.protobuf.AbstractParser<Pair>() {
                        public Pair parsePartialFrom(
                                com.google.protobuf.CodedInputStream input,
                                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                                throws com.google.protobuf.InvalidProtocolBufferException {
                            return new Pair(input, extensionRegistry);
                        }
                    };

            @Override
            public com.google.protobuf.Parser<Pair> getParserForType() {
                return PARSER;
            }

            private int bitField0_;
            // optional string key = 1;
            public static final int KEY_FIELD_NUMBER = 1;
            private Object key_;

            /**
             * <code>optional string key = 1;</code>
             */
            public boolean hasKey() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional string key = 1;</code>
             */
            public String getKey() {
                Object ref = key_;
                if (ref instanceof String) {
                    return (String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        key_ = s;
                    }
                    return s;
                }
            }

            /**
             * <code>optional string key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getKeyBytes() {
                Object ref = key_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    key_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            // optional string value = 2;
            public static final int VALUE_FIELD_NUMBER = 2;
            private Object value_;

            /**
             * <code>optional string value = 2;</code>
             */
            public boolean hasValue() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional string value = 2;</code>
             */
            public String getValue() {
                Object ref = value_;
                if (ref instanceof String) {
                    return (String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        value_ = s;
                    }
                    return s;
                }
            }

            /**
             * <code>optional string value = 2;</code>
             */
            public com.google.protobuf.ByteString
            getValueBytes() {
                Object ref = value_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    value_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            private void initFields() {
                key_ = "";
                value_ = "";
            }

            private byte memoizedIsInitialized = -1;

            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized != -1) return isInitialized == 1;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                getSerializedSize();
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    output.writeBytes(1, getKeyBytes());
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    output.writeBytes(2, getValueBytes());
                }
                getUnknownFields().writeTo(output);
            }

            private int memoizedSerializedSize = -1;

            public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1) return size;

                size = 0;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(1, getKeyBytes());
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(2, getValueBytes());
                }
                size += getUnknownFields().getSerializedSize();
                memoizedSerializedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;

            @Override
            protected Object writeReplace()
                    throws java.io.ObjectStreamException {
                return super.writeReplace();
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Pair parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Pair parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Pair parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Pair parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Pair parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Pair parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Pair parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Pair parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Pair parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Pair parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return Builder.create();
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder(com.demoo.btrace.flink.domain.PbSpan.Span.Pair prototype) {
                return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return newBuilder(this);
            }

            @Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code idl.Span.Pair}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessage.Builder<Builder>
                    implements com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_Pair_descriptor;
                }

                protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_Pair_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.demoo.btrace.flink.domain.PbSpan.Span.Pair.class, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder.class);
                }

                // Construct using com.demoo.btrace.flink.domain.PbSpan.Span.Pair.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    }
                }

                private static Builder create() {
                    return new Builder();
                }

                public Builder clear() {
                    super.clear();
                    key_ = "";
                    bitField0_ = (bitField0_ & ~0x00000001);
                    value_ = "";
                    bitField0_ = (bitField0_ & ~0x00000002);
                    return this;
                }

                public Builder clone() {
                    return create().mergeFrom(buildPartial());
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_Pair_descriptor;
                }

                public com.demoo.btrace.flink.domain.PbSpan.Span.Pair getDefaultInstanceForType() {
                    return com.demoo.btrace.flink.domain.PbSpan.Span.Pair.getDefaultInstance();
                }

                public com.demoo.btrace.flink.domain.PbSpan.Span.Pair build() {
                    com.demoo.btrace.flink.domain.PbSpan.Span.Pair result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.demoo.btrace.flink.domain.PbSpan.Span.Pair buildPartial() {
                    com.demoo.btrace.flink.domain.PbSpan.Span.Pair result = new com.demoo.btrace.flink.domain.PbSpan.Span.Pair(this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                        to_bitField0_ |= 0x00000001;
                    }
                    result.key_ = key_;
                    if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                        to_bitField0_ |= 0x00000002;
                    }
                    result.value_ = value_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.demoo.btrace.flink.domain.PbSpan.Span.Pair) {
                        return mergeFrom((com.demoo.btrace.flink.domain.PbSpan.Span.Pair) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.demoo.btrace.flink.domain.PbSpan.Span.Pair other) {
                    if (other == com.demoo.btrace.flink.domain.PbSpan.Span.Pair.getDefaultInstance()) return this;
                    if (other.hasKey()) {
                        bitField0_ |= 0x00000001;
                        key_ = other.key_;
                        onChanged();
                    }
                    if (other.hasValue()) {
                        bitField0_ |= 0x00000002;
                        value_ = other.value_;
                        onChanged();
                    }
                    this.mergeUnknownFields(other.getUnknownFields());
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.demoo.btrace.flink.domain.PbSpan.Span.Pair parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.demoo.btrace.flink.domain.PbSpan.Span.Pair) e.getUnfinishedMessage();
                        throw e;
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int bitField0_;

                // optional string key = 1;
                private Object key_ = "";

                /**
                 * <code>optional string key = 1;</code>
                 */
                public boolean hasKey() {
                    return ((bitField0_ & 0x00000001) == 0x00000001);
                }

                /**
                 * <code>optional string key = 1;</code>
                 */
                public String getKey() {
                    Object ref = key_;
                    if (!(ref instanceof String)) {
                        String s = ((com.google.protobuf.ByteString) ref)
                                .toStringUtf8();
                        key_ = s;
                        return s;
                    } else {
                        return (String) ref;
                    }
                }

                /**
                 * <code>optional string key = 1;</code>
                 */
                public com.google.protobuf.ByteString
                getKeyBytes() {
                    Object ref = key_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (String) ref);
                        key_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>optional string key = 1;</code>
                 */
                public Builder setKey(
                        String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000001;
                    key_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string key = 1;</code>
                 */
                public Builder clearKey() {
                    bitField0_ = (bitField0_ & ~0x00000001);
                    key_ = getDefaultInstance().getKey();
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string key = 1;</code>
                 */
                public Builder setKeyBytes(
                        com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000001;
                    key_ = value;
                    onChanged();
                    return this;
                }

                // optional string value = 2;
                private Object value_ = "";

                /**
                 * <code>optional string value = 2;</code>
                 */
                public boolean hasValue() {
                    return ((bitField0_ & 0x00000002) == 0x00000002);
                }

                /**
                 * <code>optional string value = 2;</code>
                 */
                public String getValue() {
                    Object ref = value_;
                    if (!(ref instanceof String)) {
                        String s = ((com.google.protobuf.ByteString) ref)
                                .toStringUtf8();
                        value_ = s;
                        return s;
                    } else {
                        return (String) ref;
                    }
                }

                /**
                 * <code>optional string value = 2;</code>
                 */
                public com.google.protobuf.ByteString
                getValueBytes() {
                    Object ref = value_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (String) ref);
                        value_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>optional string value = 2;</code>
                 */
                public Builder setValue(
                        String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000002;
                    value_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string value = 2;</code>
                 */
                public Builder clearValue() {
                    bitField0_ = (bitField0_ & ~0x00000002);
                    value_ = getDefaultInstance().getValue();
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string value = 2;</code>
                 */
                public Builder setValueBytes(
                        com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000002;
                    value_ = value;
                    onChanged();
                    return this;
                }

                // @@protoc_insertion_point(builder_scope:idl.Span.Pair)
            }

            static {
                defaultInstance = new Pair(true);
                defaultInstance.initFields();
            }

            // @@protoc_insertion_point(class_scope:idl.Span.Pair)
        }

        public interface LogOrBuilder
                extends com.google.protobuf.MessageOrBuilder {

            // optional sint64 timestamp = 1;

            /**
             * <code>optional sint64 timestamp = 1;</code>
             */
            boolean hasTimestamp();

            /**
             * <code>optional sint64 timestamp = 1;</code>
             */
            long getTimestamp();

            // optional string key = 2;

            /**
             * <code>optional string key = 2;</code>
             */
            boolean hasKey();

            /**
             * <code>optional string key = 2;</code>
             */
            String getKey();

            /**
             * <code>optional string key = 2;</code>
             */
            com.google.protobuf.ByteString
            getKeyBytes();

            // optional string value = 3;

            /**
             * <code>optional string value = 3;</code>
             */
            boolean hasValue();

            /**
             * <code>optional string value = 3;</code>
             */
            String getValue();

            /**
             * <code>optional string value = 3;</code>
             */
            com.google.protobuf.ByteString
            getValueBytes();
        }

        /**
         * Protobuf type {@code idl.Span.Log}
         */
        public static final class Log extends
                com.google.protobuf.GeneratedMessage
                implements LogOrBuilder {
            // Use Log.newBuilder() to construct.
            private Log(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
                super(builder);
                this.unknownFields = builder.getUnknownFields();
            }

            private Log(boolean noInit) {
                this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }

            private static final Log defaultInstance;

            public static Log getDefaultInstance() {
                return defaultInstance;
            }

            public Log getDefaultInstanceForType() {
                return defaultInstance;
            }

            private final com.google.protobuf.UnknownFieldSet unknownFields;

            @Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }

            private Log(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                initFields();
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownField(input, unknownFields,
                                        extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {
                                bitField0_ |= 0x00000001;
                                timestamp_ = input.readSInt64();
                                break;
                            }
                            case 18: {
                                bitField0_ |= 0x00000002;
                                key_ = input.readBytes();
                                break;
                            }
                            case 26: {
                                bitField0_ |= 0x00000004;
                                value_ = input.readBytes();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e.getMessage()).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_Log_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_Log_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.demoo.btrace.flink.domain.PbSpan.Span.Log.class, com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder.class);
            }

            public static com.google.protobuf.Parser<Log> PARSER =
                    new com.google.protobuf.AbstractParser<Log>() {
                        public Log parsePartialFrom(
                                com.google.protobuf.CodedInputStream input,
                                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                                throws com.google.protobuf.InvalidProtocolBufferException {
                            return new Log(input, extensionRegistry);
                        }
                    };

            @Override
            public com.google.protobuf.Parser<Log> getParserForType() {
                return PARSER;
            }

            private int bitField0_;
            // optional sint64 timestamp = 1;
            public static final int TIMESTAMP_FIELD_NUMBER = 1;
            private long timestamp_;

            /**
             * <code>optional sint64 timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional sint64 timestamp = 1;</code>
             */
            public long getTimestamp() {
                return timestamp_;
            }

            // optional string key = 2;
            public static final int KEY_FIELD_NUMBER = 2;
            private Object key_;

            /**
             * <code>optional string key = 2;</code>
             */
            public boolean hasKey() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional string key = 2;</code>
             */
            public String getKey() {
                Object ref = key_;
                if (ref instanceof String) {
                    return (String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        key_ = s;
                    }
                    return s;
                }
            }

            /**
             * <code>optional string key = 2;</code>
             */
            public com.google.protobuf.ByteString
            getKeyBytes() {
                Object ref = key_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    key_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            // optional string value = 3;
            public static final int VALUE_FIELD_NUMBER = 3;
            private Object value_;

            /**
             * <code>optional string value = 3;</code>
             */
            public boolean hasValue() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional string value = 3;</code>
             */
            public String getValue() {
                Object ref = value_;
                if (ref instanceof String) {
                    return (String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        value_ = s;
                    }
                    return s;
                }
            }

            /**
             * <code>optional string value = 3;</code>
             */
            public com.google.protobuf.ByteString
            getValueBytes() {
                Object ref = value_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    value_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            private void initFields() {
                timestamp_ = 0L;
                key_ = "";
                value_ = "";
            }

            private byte memoizedIsInitialized = -1;

            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized != -1) return isInitialized == 1;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                getSerializedSize();
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    output.writeSInt64(1, timestamp_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    output.writeBytes(2, getKeyBytes());
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    output.writeBytes(3, getValueBytes());
                }
                getUnknownFields().writeTo(output);
            }

            private int memoizedSerializedSize = -1;

            public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1) return size;

                size = 0;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeSInt64Size(1, timestamp_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(2, getKeyBytes());
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(3, getValueBytes());
                }
                size += getUnknownFields().getSerializedSize();
                memoizedSerializedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;

            @Override
            protected Object writeReplace()
                    throws java.io.ObjectStreamException {
                return super.writeReplace();
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Log parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Log parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Log parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Log parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Log parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Log parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Log parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Log parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Log parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.demoo.btrace.flink.domain.PbSpan.Span.Log parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return Builder.create();
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder(com.demoo.btrace.flink.domain.PbSpan.Span.Log prototype) {
                return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return newBuilder(this);
            }

            @Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code idl.Span.Log}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessage.Builder<Builder>
                    implements com.demoo.btrace.flink.domain.PbSpan.Span.LogOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_Log_descriptor;
                }

                protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_Log_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.demoo.btrace.flink.domain.PbSpan.Span.Log.class, com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder.class);
                }

                // Construct using com.demoo.btrace.flink.domain.PbSpan.Span.Log.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    }
                }

                private static Builder create() {
                    return new Builder();
                }

                public Builder clear() {
                    super.clear();
                    timestamp_ = 0L;
                    bitField0_ = (bitField0_ & ~0x00000001);
                    key_ = "";
                    bitField0_ = (bitField0_ & ~0x00000002);
                    value_ = "";
                    bitField0_ = (bitField0_ & ~0x00000004);
                    return this;
                }

                public Builder clone() {
                    return create().mergeFrom(buildPartial());
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_Log_descriptor;
                }

                public com.demoo.btrace.flink.domain.PbSpan.Span.Log getDefaultInstanceForType() {
                    return com.demoo.btrace.flink.domain.PbSpan.Span.Log.getDefaultInstance();
                }

                public com.demoo.btrace.flink.domain.PbSpan.Span.Log build() {
                    com.demoo.btrace.flink.domain.PbSpan.Span.Log result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.demoo.btrace.flink.domain.PbSpan.Span.Log buildPartial() {
                    com.demoo.btrace.flink.domain.PbSpan.Span.Log result = new com.demoo.btrace.flink.domain.PbSpan.Span.Log(this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                        to_bitField0_ |= 0x00000001;
                    }
                    result.timestamp_ = timestamp_;
                    if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                        to_bitField0_ |= 0x00000002;
                    }
                    result.key_ = key_;
                    if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                        to_bitField0_ |= 0x00000004;
                    }
                    result.value_ = value_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.demoo.btrace.flink.domain.PbSpan.Span.Log) {
                        return mergeFrom((com.demoo.btrace.flink.domain.PbSpan.Span.Log) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.demoo.btrace.flink.domain.PbSpan.Span.Log other) {
                    if (other == com.demoo.btrace.flink.domain.PbSpan.Span.Log.getDefaultInstance()) return this;
                    if (other.hasTimestamp()) {
                        setTimestamp(other.getTimestamp());
                    }
                    if (other.hasKey()) {
                        bitField0_ |= 0x00000002;
                        key_ = other.key_;
                        onChanged();
                    }
                    if (other.hasValue()) {
                        bitField0_ |= 0x00000004;
                        value_ = other.value_;
                        onChanged();
                    }
                    this.mergeUnknownFields(other.getUnknownFields());
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.demoo.btrace.flink.domain.PbSpan.Span.Log parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.demoo.btrace.flink.domain.PbSpan.Span.Log) e.getUnfinishedMessage();
                        throw e;
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int bitField0_;

                // optional sint64 timestamp = 1;
                private long timestamp_;

                /**
                 * <code>optional sint64 timestamp = 1;</code>
                 */
                public boolean hasTimestamp() {
                    return ((bitField0_ & 0x00000001) == 0x00000001);
                }

                /**
                 * <code>optional sint64 timestamp = 1;</code>
                 */
                public long getTimestamp() {
                    return timestamp_;
                }

                /**
                 * <code>optional sint64 timestamp = 1;</code>
                 */
                public Builder setTimestamp(long value) {
                    bitField0_ |= 0x00000001;
                    timestamp_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional sint64 timestamp = 1;</code>
                 */
                public Builder clearTimestamp() {
                    bitField0_ = (bitField0_ & ~0x00000001);
                    timestamp_ = 0L;
                    onChanged();
                    return this;
                }

                // optional string key = 2;
                private Object key_ = "";

                /**
                 * <code>optional string key = 2;</code>
                 */
                public boolean hasKey() {
                    return ((bitField0_ & 0x00000002) == 0x00000002);
                }

                /**
                 * <code>optional string key = 2;</code>
                 */
                public String getKey() {
                    Object ref = key_;
                    if (!(ref instanceof String)) {
                        String s = ((com.google.protobuf.ByteString) ref)
                                .toStringUtf8();
                        key_ = s;
                        return s;
                    } else {
                        return (String) ref;
                    }
                }

                /**
                 * <code>optional string key = 2;</code>
                 */
                public com.google.protobuf.ByteString
                getKeyBytes() {
                    Object ref = key_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (String) ref);
                        key_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>optional string key = 2;</code>
                 */
                public Builder setKey(
                        String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000002;
                    key_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string key = 2;</code>
                 */
                public Builder clearKey() {
                    bitField0_ = (bitField0_ & ~0x00000002);
                    key_ = getDefaultInstance().getKey();
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string key = 2;</code>
                 */
                public Builder setKeyBytes(
                        com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000002;
                    key_ = value;
                    onChanged();
                    return this;
                }

                // optional string value = 3;
                private Object value_ = "";

                /**
                 * <code>optional string value = 3;</code>
                 */
                public boolean hasValue() {
                    return ((bitField0_ & 0x00000004) == 0x00000004);
                }

                /**
                 * <code>optional string value = 3;</code>
                 */
                public String getValue() {
                    Object ref = value_;
                    if (!(ref instanceof String)) {
                        String s = ((com.google.protobuf.ByteString) ref)
                                .toStringUtf8();
                        value_ = s;
                        return s;
                    } else {
                        return (String) ref;
                    }
                }

                /**
                 * <code>optional string value = 3;</code>
                 */
                public com.google.protobuf.ByteString
                getValueBytes() {
                    Object ref = value_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (String) ref);
                        value_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>optional string value = 3;</code>
                 */
                public Builder setValue(
                        String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000004;
                    value_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string value = 3;</code>
                 */
                public Builder clearValue() {
                    bitField0_ = (bitField0_ & ~0x00000004);
                    value_ = getDefaultInstance().getValue();
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string value = 3;</code>
                 */
                public Builder setValueBytes(
                        com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000004;
                    value_ = value;
                    onChanged();
                    return this;
                }

                // @@protoc_insertion_point(builder_scope:idl.Span.Log)
            }

            static {
                defaultInstance = new Log(true);
                defaultInstance.initFields();
            }

            // @@protoc_insertion_point(class_scope:idl.Span.Log)
        }

        private int bitField0_;
        // optional string parentId = 1;
        public static final int PARENTID_FIELD_NUMBER = 1;
        private Object parentId_;

        /**
         * <code>optional string parentId = 1;</code>
         */
        public boolean hasParentId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional string parentId = 1;</code>
         */
        public String getParentId() {
            Object ref = parentId_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    parentId_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string parentId = 1;</code>
         */
        public com.google.protobuf.ByteString
        getParentIdBytes() {
            Object ref = parentId_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                parentId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // optional string id = 2;
        public static final int ID_FIELD_NUMBER = 2;
        private Object id_;

        /**
         * <code>optional string id = 2;</code>
         */
        public boolean hasId() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional string id = 2;</code>
         */
        public String getId() {
            Object ref = id_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    id_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string id = 2;</code>
         */
        public com.google.protobuf.ByteString
        getIdBytes() {
            Object ref = id_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                id_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // optional string traceId = 3;
        public static final int TRACEID_FIELD_NUMBER = 3;
        private Object traceId_;

        /**
         * <code>optional string traceId = 3;</code>
         */
        public boolean hasTraceId() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional string traceId = 3;</code>
         */
        public String getTraceId() {
            Object ref = traceId_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    traceId_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string traceId = 3;</code>
         */
        public com.google.protobuf.ByteString
        getTraceIdBytes() {
            Object ref = traceId_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                traceId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // optional .idl.Span.Kind kind = 4;
        public static final int KIND_FIELD_NUMBER = 4;
        private com.demoo.btrace.flink.domain.PbSpan.Span.Kind kind_;

        /**
         * <code>optional .idl.Span.Kind kind = 4;</code>
         */
        public boolean hasKind() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional .idl.Span.Kind kind = 4;</code>
         */
        public com.demoo.btrace.flink.domain.PbSpan.Span.Kind getKind() {
            return kind_;
        }

        // optional .idl.Span.Reference reference = 5;
        public static final int REFERENCE_FIELD_NUMBER = 5;
        private com.demoo.btrace.flink.domain.PbSpan.Span.Reference reference_;

        /**
         * <code>optional .idl.Span.Reference reference = 5;</code>
         */
        public boolean hasReference() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional .idl.Span.Reference reference = 5;</code>
         */
        public com.demoo.btrace.flink.domain.PbSpan.Span.Reference getReference() {
            return reference_;
        }

        // optional string name = 6;
        public static final int NAME_FIELD_NUMBER = 6;
        private Object name_;

        /**
         * <code>optional string name = 6;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <code>optional string name = 6;</code>
         */
        public String getName() {
            Object ref = name_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    name_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string name = 6;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            Object ref = name_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // optional sint64 timestamp = 7;
        public static final int TIMESTAMP_FIELD_NUMBER = 7;
        private long timestamp_;

        /**
         * <code>optional sint64 timestamp = 7;</code>
         */
        public boolean hasTimestamp() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <code>optional sint64 timestamp = 7;</code>
         */
        public long getTimestamp() {
            return timestamp_;
        }

        // optional sint64 duration = 8;
        public static final int DURATION_FIELD_NUMBER = 8;
        private long duration_;

        /**
         * <code>optional sint64 duration = 8;</code>
         */
        public boolean hasDuration() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
        }

        /**
         * <code>optional sint64 duration = 8;</code>
         */
        public long getDuration() {
            return duration_;
        }

        // optional string serviceName = 9;
        public static final int SERVICENAME_FIELD_NUMBER = 9;
        private Object serviceName_;

        /**
         * <code>optional string serviceName = 9;</code>
         */
        public boolean hasServiceName() {
            return ((bitField0_ & 0x00000100) == 0x00000100);
        }

        /**
         * <code>optional string serviceName = 9;</code>
         */
        public String getServiceName() {
            Object ref = serviceName_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    serviceName_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string serviceName = 9;</code>
         */
        public com.google.protobuf.ByteString
        getServiceNameBytes() {
            Object ref = serviceName_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                serviceName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // optional fixed32 ip = 10;
        public static final int IP_FIELD_NUMBER = 10;
        private int ip_;

        /**
         * <code>optional fixed32 ip = 10;</code>
         */
        public boolean hasIp() {
            return ((bitField0_ & 0x00000200) == 0x00000200);
        }

        /**
         * <code>optional fixed32 ip = 10;</code>
         */
        public int getIp() {
            return ip_;
        }

        // repeated .idl.Span.Pair baggages = 11;
        public static final int BAGGAGES_FIELD_NUMBER = 11;
        private java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair> baggages_;

        /**
         * <code>repeated .idl.Span.Pair baggages = 11;</code>
         */
        public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair> getBaggagesList() {
            return baggages_;
        }

        /**
         * <code>repeated .idl.Span.Pair baggages = 11;</code>
         */
        public java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder>
        getBaggagesOrBuilderList() {
            return baggages_;
        }

        /**
         * <code>repeated .idl.Span.Pair baggages = 11;</code>
         */
        public int getBaggagesCount() {
            return baggages_.size();
        }

        /**
         * <code>repeated .idl.Span.Pair baggages = 11;</code>
         */
        public com.demoo.btrace.flink.domain.PbSpan.Span.Pair getBaggages(int index) {
            return baggages_.get(index);
        }

        /**
         * <code>repeated .idl.Span.Pair baggages = 11;</code>
         */
        public com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder getBaggagesOrBuilder(
                int index) {
            return baggages_.get(index);
        }

        // repeated .idl.Span.Pair tags = 12;
        public static final int TAGS_FIELD_NUMBER = 12;
        private java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair> tags_;

        /**
         * <code>repeated .idl.Span.Pair tags = 12;</code>
         */
        public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair> getTagsList() {
            return tags_;
        }

        /**
         * <code>repeated .idl.Span.Pair tags = 12;</code>
         */
        public java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder>
        getTagsOrBuilderList() {
            return tags_;
        }

        /**
         * <code>repeated .idl.Span.Pair tags = 12;</code>
         */
        public int getTagsCount() {
            return tags_.size();
        }

        /**
         * <code>repeated .idl.Span.Pair tags = 12;</code>
         */
        public com.demoo.btrace.flink.domain.PbSpan.Span.Pair getTags(int index) {
            return tags_.get(index);
        }

        /**
         * <code>repeated .idl.Span.Pair tags = 12;</code>
         */
        public com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder getTagsOrBuilder(
                int index) {
            return tags_.get(index);
        }

        // repeated .idl.Span.Log logs = 13;
        public static final int LOGS_FIELD_NUMBER = 13;
        private java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Log> logs_;

        /**
         * <code>repeated .idl.Span.Log logs = 13;</code>
         */
        public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Log> getLogsList() {
            return logs_;
        }

        /**
         * <code>repeated .idl.Span.Log logs = 13;</code>
         */
        public java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.Span.LogOrBuilder>
        getLogsOrBuilderList() {
            return logs_;
        }

        /**
         * <code>repeated .idl.Span.Log logs = 13;</code>
         */
        public int getLogsCount() {
            return logs_.size();
        }

        /**
         * <code>repeated .idl.Span.Log logs = 13;</code>
         */
        public com.demoo.btrace.flink.domain.PbSpan.Span.Log getLogs(int index) {
            return logs_.get(index);
        }

        /**
         * <code>repeated .idl.Span.Log logs = 13;</code>
         */
        public com.demoo.btrace.flink.domain.PbSpan.Span.LogOrBuilder getLogsOrBuilder(
                int index) {
            return logs_.get(index);
        }

        private void initFields() {
            parentId_ = "";
            id_ = "";
            traceId_ = "";
            kind_ = com.demoo.btrace.flink.domain.PbSpan.Span.Kind.SERVER;
            reference_ = com.demoo.btrace.flink.domain.PbSpan.Span.Reference.CHILD_OF;
            name_ = "";
            timestamp_ = 0L;
            duration_ = 0L;
            serviceName_ = "";
            ip_ = 0;
            baggages_ = java.util.Collections.emptyList();
            tags_ = java.util.Collections.emptyList();
            logs_ = java.util.Collections.emptyList();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getParentIdBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getIdBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBytes(3, getTraceIdBytes());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeEnum(4, kind_.getNumber());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeEnum(5, reference_.getNumber());
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeBytes(6, getNameBytes());
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeSInt64(7, timestamp_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                output.writeSInt64(8, duration_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                output.writeBytes(9, getServiceNameBytes());
            }
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
                output.writeFixed32(10, ip_);
            }
            for (int i = 0; i < baggages_.size(); i++) {
                output.writeMessage(11, baggages_.get(i));
            }
            for (int i = 0; i < tags_.size(); i++) {
                output.writeMessage(12, tags_.get(i));
            }
            for (int i = 0; i < logs_.size(); i++) {
                output.writeMessage(13, logs_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getParentIdBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getIdBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, getTraceIdBytes());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(4, kind_.getNumber());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(5, reference_.getNumber());
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(6, getNameBytes());
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt64Size(7, timestamp_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt64Size(8, duration_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(9, getServiceNameBytes());
            }
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(10, ip_);
            }
            for (int i = 0; i < baggages_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(11, baggages_.get(i));
            }
            for (int i = 0; i < tags_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(12, tags_.get(i));
            }
            for (int i = 0; i < logs_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(13, logs_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static com.demoo.btrace.flink.domain.PbSpan.Span parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.Span parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.Span parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.Span parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.Span parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.Span parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.Span parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.Span parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.Span parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.Span parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(com.demoo.btrace.flink.domain.PbSpan.Span prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code idl.Span}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements com.demoo.btrace.flink.domain.PbSpan.SpanOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.demoo.btrace.flink.domain.PbSpan.Span.class, com.demoo.btrace.flink.domain.PbSpan.Span.Builder.class);
            }

            // Construct using com.demoo.btrace.flink.domain.PbSpan.Span.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getBaggagesFieldBuilder();
                    getTagsFieldBuilder();
                    getLogsFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                parentId_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                id_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                traceId_ = "";
                bitField0_ = (bitField0_ & ~0x00000004);
                kind_ = com.demoo.btrace.flink.domain.PbSpan.Span.Kind.SERVER;
                bitField0_ = (bitField0_ & ~0x00000008);
                reference_ = com.demoo.btrace.flink.domain.PbSpan.Span.Reference.CHILD_OF;
                bitField0_ = (bitField0_ & ~0x00000010);
                name_ = "";
                bitField0_ = (bitField0_ & ~0x00000020);
                timestamp_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000040);
                duration_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000080);
                serviceName_ = "";
                bitField0_ = (bitField0_ & ~0x00000100);
                ip_ = 0;
                bitField0_ = (bitField0_ & ~0x00000200);
                if (baggagesBuilder_ == null) {
                    baggages_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000400);
                } else {
                    baggagesBuilder_.clear();
                }
                if (tagsBuilder_ == null) {
                    tags_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000800);
                } else {
                    tagsBuilder_.clear();
                }
                if (logsBuilder_ == null) {
                    logs_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00001000);
                } else {
                    logsBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_Span_descriptor;
            }

            public com.demoo.btrace.flink.domain.PbSpan.Span getDefaultInstanceForType() {
                return com.demoo.btrace.flink.domain.PbSpan.Span.getDefaultInstance();
            }

            public com.demoo.btrace.flink.domain.PbSpan.Span build() {
                com.demoo.btrace.flink.domain.PbSpan.Span result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.demoo.btrace.flink.domain.PbSpan.Span buildPartial() {
                com.demoo.btrace.flink.domain.PbSpan.Span result = new com.demoo.btrace.flink.domain.PbSpan.Span(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.parentId_ = parentId_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.id_ = id_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.traceId_ = traceId_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.kind_ = kind_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.reference_ = reference_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.name_ = name_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.timestamp_ = timestamp_;
                if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.duration_ = duration_;
                if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
                    to_bitField0_ |= 0x00000100;
                }
                result.serviceName_ = serviceName_;
                if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
                    to_bitField0_ |= 0x00000200;
                }
                result.ip_ = ip_;
                if (baggagesBuilder_ == null) {
                    if (((bitField0_ & 0x00000400) == 0x00000400)) {
                        baggages_ = java.util.Collections.unmodifiableList(baggages_);
                        bitField0_ = (bitField0_ & ~0x00000400);
                    }
                    result.baggages_ = baggages_;
                } else {
                    result.baggages_ = baggagesBuilder_.build();
                }
                if (tagsBuilder_ == null) {
                    if (((bitField0_ & 0x00000800) == 0x00000800)) {
                        tags_ = java.util.Collections.unmodifiableList(tags_);
                        bitField0_ = (bitField0_ & ~0x00000800);
                    }
                    result.tags_ = tags_;
                } else {
                    result.tags_ = tagsBuilder_.build();
                }
                if (logsBuilder_ == null) {
                    if (((bitField0_ & 0x00001000) == 0x00001000)) {
                        logs_ = java.util.Collections.unmodifiableList(logs_);
                        bitField0_ = (bitField0_ & ~0x00001000);
                    }
                    result.logs_ = logs_;
                } else {
                    result.logs_ = logsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.demoo.btrace.flink.domain.PbSpan.Span) {
                    return mergeFrom((com.demoo.btrace.flink.domain.PbSpan.Span) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.demoo.btrace.flink.domain.PbSpan.Span other) {
                if (other == com.demoo.btrace.flink.domain.PbSpan.Span.getDefaultInstance()) return this;
                if (other.hasParentId()) {
                    bitField0_ |= 0x00000001;
                    parentId_ = other.parentId_;
                    onChanged();
                }
                if (other.hasId()) {
                    bitField0_ |= 0x00000002;
                    id_ = other.id_;
                    onChanged();
                }
                if (other.hasTraceId()) {
                    bitField0_ |= 0x00000004;
                    traceId_ = other.traceId_;
                    onChanged();
                }
                if (other.hasKind()) {
                    setKind(other.getKind());
                }
                if (other.hasReference()) {
                    setReference(other.getReference());
                }
                if (other.hasName()) {
                    bitField0_ |= 0x00000020;
                    name_ = other.name_;
                    onChanged();
                }
                if (other.hasTimestamp()) {
                    setTimestamp(other.getTimestamp());
                }
                if (other.hasDuration()) {
                    setDuration(other.getDuration());
                }
                if (other.hasServiceName()) {
                    bitField0_ |= 0x00000100;
                    serviceName_ = other.serviceName_;
                    onChanged();
                }
                if (other.hasIp()) {
                    setIp(other.getIp());
                }
                if (baggagesBuilder_ == null) {
                    if (!other.baggages_.isEmpty()) {
                        if (baggages_.isEmpty()) {
                            baggages_ = other.baggages_;
                            bitField0_ = (bitField0_ & ~0x00000400);
                        } else {
                            ensureBaggagesIsMutable();
                            baggages_.addAll(other.baggages_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.baggages_.isEmpty()) {
                        if (baggagesBuilder_.isEmpty()) {
                            baggagesBuilder_.dispose();
                            baggagesBuilder_ = null;
                            baggages_ = other.baggages_;
                            bitField0_ = (bitField0_ & ~0x00000400);
                            baggagesBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getBaggagesFieldBuilder() : null;
                        } else {
                            baggagesBuilder_.addAllMessages(other.baggages_);
                        }
                    }
                }
                if (tagsBuilder_ == null) {
                    if (!other.tags_.isEmpty()) {
                        if (tags_.isEmpty()) {
                            tags_ = other.tags_;
                            bitField0_ = (bitField0_ & ~0x00000800);
                        } else {
                            ensureTagsIsMutable();
                            tags_.addAll(other.tags_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.tags_.isEmpty()) {
                        if (tagsBuilder_.isEmpty()) {
                            tagsBuilder_.dispose();
                            tagsBuilder_ = null;
                            tags_ = other.tags_;
                            bitField0_ = (bitField0_ & ~0x00000800);
                            tagsBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getTagsFieldBuilder() : null;
                        } else {
                            tagsBuilder_.addAllMessages(other.tags_);
                        }
                    }
                }
                if (logsBuilder_ == null) {
                    if (!other.logs_.isEmpty()) {
                        if (logs_.isEmpty()) {
                            logs_ = other.logs_;
                            bitField0_ = (bitField0_ & ~0x00001000);
                        } else {
                            ensureLogsIsMutable();
                            logs_.addAll(other.logs_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.logs_.isEmpty()) {
                        if (logsBuilder_.isEmpty()) {
                            logsBuilder_.dispose();
                            logsBuilder_ = null;
                            logs_ = other.logs_;
                            bitField0_ = (bitField0_ & ~0x00001000);
                            logsBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getLogsFieldBuilder() : null;
                        } else {
                            logsBuilder_.addAllMessages(other.logs_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.demoo.btrace.flink.domain.PbSpan.Span parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.demoo.btrace.flink.domain.PbSpan.Span) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // optional string parentId = 1;
            private Object parentId_ = "";

            /**
             * <code>optional string parentId = 1;</code>
             */
            public boolean hasParentId() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional string parentId = 1;</code>
             */
            public String getParentId() {
                Object ref = parentId_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    parentId_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string parentId = 1;</code>
             */
            public com.google.protobuf.ByteString
            getParentIdBytes() {
                Object ref = parentId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    parentId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string parentId = 1;</code>
             */
            public Builder setParentId(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                parentId_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string parentId = 1;</code>
             */
            public Builder clearParentId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                parentId_ = getDefaultInstance().getParentId();
                onChanged();
                return this;
            }

            /**
             * <code>optional string parentId = 1;</code>
             */
            public Builder setParentIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                parentId_ = value;
                onChanged();
                return this;
            }

            // optional string id = 2;
            private Object id_ = "";

            /**
             * <code>optional string id = 2;</code>
             */
            public boolean hasId() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional string id = 2;</code>
             */
            public String getId() {
                Object ref = id_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    id_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string id = 2;</code>
             */
            public com.google.protobuf.ByteString
            getIdBytes() {
                Object ref = id_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    id_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string id = 2;</code>
             */
            public Builder setId(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string id = 2;</code>
             */
            public Builder clearId() {
                bitField0_ = (bitField0_ & ~0x00000002);
                id_ = getDefaultInstance().getId();
                onChanged();
                return this;
            }

            /**
             * <code>optional string id = 2;</code>
             */
            public Builder setIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                id_ = value;
                onChanged();
                return this;
            }

            // optional string traceId = 3;
            private Object traceId_ = "";

            /**
             * <code>optional string traceId = 3;</code>
             */
            public boolean hasTraceId() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional string traceId = 3;</code>
             */
            public String getTraceId() {
                Object ref = traceId_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    traceId_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string traceId = 3;</code>
             */
            public com.google.protobuf.ByteString
            getTraceIdBytes() {
                Object ref = traceId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    traceId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string traceId = 3;</code>
             */
            public Builder setTraceId(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                traceId_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string traceId = 3;</code>
             */
            public Builder clearTraceId() {
                bitField0_ = (bitField0_ & ~0x00000004);
                traceId_ = getDefaultInstance().getTraceId();
                onChanged();
                return this;
            }

            /**
             * <code>optional string traceId = 3;</code>
             */
            public Builder setTraceIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                traceId_ = value;
                onChanged();
                return this;
            }

            // optional .idl.Span.Kind kind = 4;
            private com.demoo.btrace.flink.domain.PbSpan.Span.Kind kind_ = com.demoo.btrace.flink.domain.PbSpan.Span.Kind.SERVER;

            /**
             * <code>optional .idl.Span.Kind kind = 4;</code>
             */
            public boolean hasKind() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional .idl.Span.Kind kind = 4;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Kind getKind() {
                return kind_;
            }

            /**
             * <code>optional .idl.Span.Kind kind = 4;</code>
             */
            public Builder setKind(com.demoo.btrace.flink.domain.PbSpan.Span.Kind value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                kind_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional .idl.Span.Kind kind = 4;</code>
             */
            public Builder clearKind() {
                bitField0_ = (bitField0_ & ~0x00000008);
                kind_ = com.demoo.btrace.flink.domain.PbSpan.Span.Kind.SERVER;
                onChanged();
                return this;
            }

            // optional .idl.Span.Reference reference = 5;
            private com.demoo.btrace.flink.domain.PbSpan.Span.Reference reference_ = com.demoo.btrace.flink.domain.PbSpan.Span.Reference.CHILD_OF;

            /**
             * <code>optional .idl.Span.Reference reference = 5;</code>
             */
            public boolean hasReference() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional .idl.Span.Reference reference = 5;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Reference getReference() {
                return reference_;
            }

            /**
             * <code>optional .idl.Span.Reference reference = 5;</code>
             */
            public Builder setReference(com.demoo.btrace.flink.domain.PbSpan.Span.Reference value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                reference_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional .idl.Span.Reference reference = 5;</code>
             */
            public Builder clearReference() {
                bitField0_ = (bitField0_ & ~0x00000010);
                reference_ = com.demoo.btrace.flink.domain.PbSpan.Span.Reference.CHILD_OF;
                onChanged();
                return this;
            }

            // optional string name = 6;
            private Object name_ = "";

            /**
             * <code>optional string name = 6;</code>
             */
            public boolean hasName() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <code>optional string name = 6;</code>
             */
            public String getName() {
                Object ref = name_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string name = 6;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string name = 6;</code>
             */
            public Builder setName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string name = 6;</code>
             */
            public Builder clearName() {
                bitField0_ = (bitField0_ & ~0x00000020);
                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <code>optional string name = 6;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                name_ = value;
                onChanged();
                return this;
            }

            // optional sint64 timestamp = 7;
            private long timestamp_;

            /**
             * <code>optional sint64 timestamp = 7;</code>
             */
            public boolean hasTimestamp() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <code>optional sint64 timestamp = 7;</code>
             */
            public long getTimestamp() {
                return timestamp_;
            }

            /**
             * <code>optional sint64 timestamp = 7;</code>
             */
            public Builder setTimestamp(long value) {
                bitField0_ |= 0x00000040;
                timestamp_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional sint64 timestamp = 7;</code>
             */
            public Builder clearTimestamp() {
                bitField0_ = (bitField0_ & ~0x00000040);
                timestamp_ = 0L;
                onChanged();
                return this;
            }

            // optional sint64 duration = 8;
            private long duration_;

            /**
             * <code>optional sint64 duration = 8;</code>
             */
            public boolean hasDuration() {
                return ((bitField0_ & 0x00000080) == 0x00000080);
            }

            /**
             * <code>optional sint64 duration = 8;</code>
             */
            public long getDuration() {
                return duration_;
            }

            /**
             * <code>optional sint64 duration = 8;</code>
             */
            public Builder setDuration(long value) {
                bitField0_ |= 0x00000080;
                duration_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional sint64 duration = 8;</code>
             */
            public Builder clearDuration() {
                bitField0_ = (bitField0_ & ~0x00000080);
                duration_ = 0L;
                onChanged();
                return this;
            }

            // optional string serviceName = 9;
            private Object serviceName_ = "";

            /**
             * <code>optional string serviceName = 9;</code>
             */
            public boolean hasServiceName() {
                return ((bitField0_ & 0x00000100) == 0x00000100);
            }

            /**
             * <code>optional string serviceName = 9;</code>
             */
            public String getServiceName() {
                Object ref = serviceName_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    serviceName_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string serviceName = 9;</code>
             */
            public com.google.protobuf.ByteString
            getServiceNameBytes() {
                Object ref = serviceName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    serviceName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string serviceName = 9;</code>
             */
            public Builder setServiceName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000100;
                serviceName_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional string serviceName = 9;</code>
             */
            public Builder clearServiceName() {
                bitField0_ = (bitField0_ & ~0x00000100);
                serviceName_ = getDefaultInstance().getServiceName();
                onChanged();
                return this;
            }

            /**
             * <code>optional string serviceName = 9;</code>
             */
            public Builder setServiceNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000100;
                serviceName_ = value;
                onChanged();
                return this;
            }

            // optional fixed32 ip = 10;
            private int ip_;

            /**
             * <code>optional fixed32 ip = 10;</code>
             */
            public boolean hasIp() {
                return ((bitField0_ & 0x00000200) == 0x00000200);
            }

            /**
             * <code>optional fixed32 ip = 10;</code>
             */
            public int getIp() {
                return ip_;
            }

            /**
             * <code>optional fixed32 ip = 10;</code>
             */
            public Builder setIp(int value) {
                bitField0_ |= 0x00000200;
                ip_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional fixed32 ip = 10;</code>
             */
            public Builder clearIp() {
                bitField0_ = (bitField0_ & ~0x00000200);
                ip_ = 0;
                onChanged();
                return this;
            }

            // repeated .idl.Span.Pair baggages = 11;
            private java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair> baggages_ =
                    java.util.Collections.emptyList();

            private void ensureBaggagesIsMutable() {
                if (!((bitField0_ & 0x00000400) == 0x00000400)) {
                    baggages_ = new java.util.ArrayList<com.demoo.btrace.flink.domain.PbSpan.Span.Pair>(baggages_);
                    bitField0_ |= 0x00000400;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    com.demoo.btrace.flink.domain.PbSpan.Span.Pair, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder, com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder> baggagesBuilder_;

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair> getBaggagesList() {
                if (baggagesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(baggages_);
                } else {
                    return baggagesBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public int getBaggagesCount() {
                if (baggagesBuilder_ == null) {
                    return baggages_.size();
                } else {
                    return baggagesBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Pair getBaggages(int index) {
                if (baggagesBuilder_ == null) {
                    return baggages_.get(index);
                } else {
                    return baggagesBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public Builder setBaggages(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Pair value) {
                if (baggagesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBaggagesIsMutable();
                    baggages_.set(index, value);
                    onChanged();
                } else {
                    baggagesBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public Builder setBaggages(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder builderForValue) {
                if (baggagesBuilder_ == null) {
                    ensureBaggagesIsMutable();
                    baggages_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    baggagesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public Builder addBaggages(com.demoo.btrace.flink.domain.PbSpan.Span.Pair value) {
                if (baggagesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBaggagesIsMutable();
                    baggages_.add(value);
                    onChanged();
                } else {
                    baggagesBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public Builder addBaggages(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Pair value) {
                if (baggagesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBaggagesIsMutable();
                    baggages_.add(index, value);
                    onChanged();
                } else {
                    baggagesBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public Builder addBaggages(
                    com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder builderForValue) {
                if (baggagesBuilder_ == null) {
                    ensureBaggagesIsMutable();
                    baggages_.add(builderForValue.build());
                    onChanged();
                } else {
                    baggagesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public Builder addBaggages(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder builderForValue) {
                if (baggagesBuilder_ == null) {
                    ensureBaggagesIsMutable();
                    baggages_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    baggagesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public Builder addAllBaggages(
                    Iterable<? extends com.demoo.btrace.flink.domain.PbSpan.Span.Pair> values) {
                if (baggagesBuilder_ == null) {
                    ensureBaggagesIsMutable();
                    super.addAll(values, baggages_);
                    onChanged();
                } else {
                    baggagesBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public Builder clearBaggages() {
                if (baggagesBuilder_ == null) {
                    baggages_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000400);
                    onChanged();
                } else {
                    baggagesBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public Builder removeBaggages(int index) {
                if (baggagesBuilder_ == null) {
                    ensureBaggagesIsMutable();
                    baggages_.remove(index);
                    onChanged();
                } else {
                    baggagesBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder getBaggagesBuilder(
                    int index) {
                return getBaggagesFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder getBaggagesOrBuilder(
                    int index) {
                if (baggagesBuilder_ == null) {
                    return baggages_.get(index);
                } else {
                    return baggagesBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder>
            getBaggagesOrBuilderList() {
                if (baggagesBuilder_ != null) {
                    return baggagesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(baggages_);
                }
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder addBaggagesBuilder() {
                return getBaggagesFieldBuilder().addBuilder(
                        com.demoo.btrace.flink.domain.PbSpan.Span.Pair.getDefaultInstance());
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder addBaggagesBuilder(
                    int index) {
                return getBaggagesFieldBuilder().addBuilder(
                        index, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.getDefaultInstance());
            }

            /**
             * <code>repeated .idl.Span.Pair baggages = 11;</code>
             */
            public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder>
            getBaggagesBuilderList() {
                return getBaggagesFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    com.demoo.btrace.flink.domain.PbSpan.Span.Pair, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder, com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder>
            getBaggagesFieldBuilder() {
                if (baggagesBuilder_ == null) {
                    baggagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            com.demoo.btrace.flink.domain.PbSpan.Span.Pair, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder, com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder>(
                            baggages_,
                            ((bitField0_ & 0x00000400) == 0x00000400),
                            getParentForChildren(),
                            isClean());
                    baggages_ = null;
                }
                return baggagesBuilder_;
            }

            // repeated .idl.Span.Pair tags = 12;
            private java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair> tags_ =
                    java.util.Collections.emptyList();

            private void ensureTagsIsMutable() {
                if (!((bitField0_ & 0x00000800) == 0x00000800)) {
                    tags_ = new java.util.ArrayList<com.demoo.btrace.flink.domain.PbSpan.Span.Pair>(tags_);
                    bitField0_ |= 0x00000800;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    com.demoo.btrace.flink.domain.PbSpan.Span.Pair, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder, com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder> tagsBuilder_;

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair> getTagsList() {
                if (tagsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(tags_);
                } else {
                    return tagsBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public int getTagsCount() {
                if (tagsBuilder_ == null) {
                    return tags_.size();
                } else {
                    return tagsBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Pair getTags(int index) {
                if (tagsBuilder_ == null) {
                    return tags_.get(index);
                } else {
                    return tagsBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public Builder setTags(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Pair value) {
                if (tagsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTagsIsMutable();
                    tags_.set(index, value);
                    onChanged();
                } else {
                    tagsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public Builder setTags(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder builderForValue) {
                if (tagsBuilder_ == null) {
                    ensureTagsIsMutable();
                    tags_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    tagsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public Builder addTags(com.demoo.btrace.flink.domain.PbSpan.Span.Pair value) {
                if (tagsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTagsIsMutable();
                    tags_.add(value);
                    onChanged();
                } else {
                    tagsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public Builder addTags(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Pair value) {
                if (tagsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTagsIsMutable();
                    tags_.add(index, value);
                    onChanged();
                } else {
                    tagsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public Builder addTags(
                    com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder builderForValue) {
                if (tagsBuilder_ == null) {
                    ensureTagsIsMutable();
                    tags_.add(builderForValue.build());
                    onChanged();
                } else {
                    tagsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public Builder addTags(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder builderForValue) {
                if (tagsBuilder_ == null) {
                    ensureTagsIsMutable();
                    tags_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    tagsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public Builder addAllTags(
                    Iterable<? extends com.demoo.btrace.flink.domain.PbSpan.Span.Pair> values) {
                if (tagsBuilder_ == null) {
                    ensureTagsIsMutable();
                    super.addAll(values, tags_);
                    onChanged();
                } else {
                    tagsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public Builder clearTags() {
                if (tagsBuilder_ == null) {
                    tags_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000800);
                    onChanged();
                } else {
                    tagsBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public Builder removeTags(int index) {
                if (tagsBuilder_ == null) {
                    ensureTagsIsMutable();
                    tags_.remove(index);
                    onChanged();
                } else {
                    tagsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder getTagsBuilder(
                    int index) {
                return getTagsFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder getTagsOrBuilder(
                    int index) {
                if (tagsBuilder_ == null) {
                    return tags_.get(index);
                } else {
                    return tagsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder>
            getTagsOrBuilderList() {
                if (tagsBuilder_ != null) {
                    return tagsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(tags_);
                }
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder addTagsBuilder() {
                return getTagsFieldBuilder().addBuilder(
                        com.demoo.btrace.flink.domain.PbSpan.Span.Pair.getDefaultInstance());
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder addTagsBuilder(
                    int index) {
                return getTagsFieldBuilder().addBuilder(
                        index, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.getDefaultInstance());
            }

            /**
             * <code>repeated .idl.Span.Pair tags = 12;</code>
             */
            public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder>
            getTagsBuilderList() {
                return getTagsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    com.demoo.btrace.flink.domain.PbSpan.Span.Pair, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder, com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder>
            getTagsFieldBuilder() {
                if (tagsBuilder_ == null) {
                    tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            com.demoo.btrace.flink.domain.PbSpan.Span.Pair, com.demoo.btrace.flink.domain.PbSpan.Span.Pair.Builder, com.demoo.btrace.flink.domain.PbSpan.Span.PairOrBuilder>(
                            tags_,
                            ((bitField0_ & 0x00000800) == 0x00000800),
                            getParentForChildren(),
                            isClean());
                    tags_ = null;
                }
                return tagsBuilder_;
            }

            // repeated .idl.Span.Log logs = 13;
            private java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Log> logs_ =
                    java.util.Collections.emptyList();

            private void ensureLogsIsMutable() {
                if (!((bitField0_ & 0x00001000) == 0x00001000)) {
                    logs_ = new java.util.ArrayList<com.demoo.btrace.flink.domain.PbSpan.Span.Log>(logs_);
                    bitField0_ |= 0x00001000;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    com.demoo.btrace.flink.domain.PbSpan.Span.Log, com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder, com.demoo.btrace.flink.domain.PbSpan.Span.LogOrBuilder> logsBuilder_;

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Log> getLogsList() {
                if (logsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(logs_);
                } else {
                    return logsBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public int getLogsCount() {
                if (logsBuilder_ == null) {
                    return logs_.size();
                } else {
                    return logsBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Log getLogs(int index) {
                if (logsBuilder_ == null) {
                    return logs_.get(index);
                } else {
                    return logsBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public Builder setLogs(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Log value) {
                if (logsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLogsIsMutable();
                    logs_.set(index, value);
                    onChanged();
                } else {
                    logsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public Builder setLogs(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder builderForValue) {
                if (logsBuilder_ == null) {
                    ensureLogsIsMutable();
                    logs_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    logsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public Builder addLogs(com.demoo.btrace.flink.domain.PbSpan.Span.Log value) {
                if (logsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLogsIsMutable();
                    logs_.add(value);
                    onChanged();
                } else {
                    logsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public Builder addLogs(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Log value) {
                if (logsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLogsIsMutable();
                    logs_.add(index, value);
                    onChanged();
                } else {
                    logsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public Builder addLogs(
                    com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder builderForValue) {
                if (logsBuilder_ == null) {
                    ensureLogsIsMutable();
                    logs_.add(builderForValue.build());
                    onChanged();
                } else {
                    logsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public Builder addLogs(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder builderForValue) {
                if (logsBuilder_ == null) {
                    ensureLogsIsMutable();
                    logs_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    logsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public Builder addAllLogs(
                    Iterable<? extends com.demoo.btrace.flink.domain.PbSpan.Span.Log> values) {
                if (logsBuilder_ == null) {
                    ensureLogsIsMutable();
                    super.addAll(values, logs_);
                    onChanged();
                } else {
                    logsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public Builder clearLogs() {
                if (logsBuilder_ == null) {
                    logs_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00001000);
                    onChanged();
                } else {
                    logsBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public Builder removeLogs(int index) {
                if (logsBuilder_ == null) {
                    ensureLogsIsMutable();
                    logs_.remove(index);
                    onChanged();
                } else {
                    logsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder getLogsBuilder(
                    int index) {
                return getLogsFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.LogOrBuilder getLogsOrBuilder(
                    int index) {
                if (logsBuilder_ == null) {
                    return logs_.get(index);
                } else {
                    return logsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.Span.LogOrBuilder>
            getLogsOrBuilderList() {
                if (logsBuilder_ != null) {
                    return logsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(logs_);
                }
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder addLogsBuilder() {
                return getLogsFieldBuilder().addBuilder(
                        com.demoo.btrace.flink.domain.PbSpan.Span.Log.getDefaultInstance());
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder addLogsBuilder(
                    int index) {
                return getLogsFieldBuilder().addBuilder(
                        index, com.demoo.btrace.flink.domain.PbSpan.Span.Log.getDefaultInstance());
            }

            /**
             * <code>repeated .idl.Span.Log logs = 13;</code>
             */
            public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder>
            getLogsBuilderList() {
                return getLogsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    com.demoo.btrace.flink.domain.PbSpan.Span.Log, com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder, com.demoo.btrace.flink.domain.PbSpan.Span.LogOrBuilder>
            getLogsFieldBuilder() {
                if (logsBuilder_ == null) {
                    logsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            com.demoo.btrace.flink.domain.PbSpan.Span.Log, com.demoo.btrace.flink.domain.PbSpan.Span.Log.Builder, com.demoo.btrace.flink.domain.PbSpan.Span.LogOrBuilder>(
                            logs_,
                            ((bitField0_ & 0x00001000) == 0x00001000),
                            getParentForChildren(),
                            isClean());
                    logs_ = null;
                }
                return logsBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:idl.Span)
        }

        static {
            defaultInstance = new Span(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:idl.Span)
    }

    public interface SpanListOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // repeated .idl.Span spans = 1;

        /**
         * <code>repeated .idl.Span spans = 1;</code>
         */
        java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span>
        getSpansList();

        /**
         * <code>repeated .idl.Span spans = 1;</code>
         */
        com.demoo.btrace.flink.domain.PbSpan.Span getSpans(int index);

        /**
         * <code>repeated .idl.Span spans = 1;</code>
         */
        int getSpansCount();

        /**
         * <code>repeated .idl.Span spans = 1;</code>
         */
        java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.SpanOrBuilder>
        getSpansOrBuilderList();

        /**
         * <code>repeated .idl.Span spans = 1;</code>
         */
        com.demoo.btrace.flink.domain.PbSpan.SpanOrBuilder getSpansOrBuilder(
                int index);
    }

    /**
     * Protobuf type {@code idl.SpanList}
     */
    public static final class SpanList extends
            com.google.protobuf.GeneratedMessage
            implements SpanListOrBuilder {
        // Use SpanList.newBuilder() to construct.
        private SpanList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private SpanList(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final SpanList defaultInstance;

        public static SpanList getDefaultInstance() {
            return defaultInstance;
        }

        public SpanList getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private SpanList(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                spans_ = new java.util.ArrayList<com.demoo.btrace.flink.domain.PbSpan.Span>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            spans_.add(input.readMessage(com.demoo.btrace.flink.domain.PbSpan.Span.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    spans_ = java.util.Collections.unmodifiableList(spans_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_SpanList_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_SpanList_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.demoo.btrace.flink.domain.PbSpan.SpanList.class, com.demoo.btrace.flink.domain.PbSpan.SpanList.Builder.class);
        }

        public static com.google.protobuf.Parser<SpanList> PARSER =
                new com.google.protobuf.AbstractParser<SpanList>() {
                    public SpanList parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new SpanList(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<SpanList> getParserForType() {
            return PARSER;
        }

        // repeated .idl.Span spans = 1;
        public static final int SPANS_FIELD_NUMBER = 1;
        private java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span> spans_;

        /**
         * <code>repeated .idl.Span spans = 1;</code>
         */
        public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span> getSpansList() {
            return spans_;
        }

        /**
         * <code>repeated .idl.Span spans = 1;</code>
         */
        public java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.SpanOrBuilder>
        getSpansOrBuilderList() {
            return spans_;
        }

        /**
         * <code>repeated .idl.Span spans = 1;</code>
         */
        public int getSpansCount() {
            return spans_.size();
        }

        /**
         * <code>repeated .idl.Span spans = 1;</code>
         */
        public com.demoo.btrace.flink.domain.PbSpan.Span getSpans(int index) {
            return spans_.get(index);
        }

        /**
         * <code>repeated .idl.Span spans = 1;</code>
         */
        public com.demoo.btrace.flink.domain.PbSpan.SpanOrBuilder getSpansOrBuilder(
                int index) {
            return spans_.get(index);
        }

        private void initFields() {
            spans_ = java.util.Collections.emptyList();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < spans_.size(); i++) {
                output.writeMessage(1, spans_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < spans_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, spans_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static com.demoo.btrace.flink.domain.PbSpan.SpanList parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.SpanList parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.SpanList parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.SpanList parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.SpanList parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.SpanList parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.SpanList parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.SpanList parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.SpanList parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.demoo.btrace.flink.domain.PbSpan.SpanList parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(com.demoo.btrace.flink.domain.PbSpan.SpanList prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code idl.SpanList}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements com.demoo.btrace.flink.domain.PbSpan.SpanListOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_SpanList_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_SpanList_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.demoo.btrace.flink.domain.PbSpan.SpanList.class, com.demoo.btrace.flink.domain.PbSpan.SpanList.Builder.class);
            }

            // Construct using com.demoo.btrace.flink.domain.PbSpan.SpanList.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getSpansFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (spansBuilder_ == null) {
                    spans_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    spansBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.demoo.btrace.flink.domain.PbSpan.internal_static_idl_SpanList_descriptor;
            }

            public com.demoo.btrace.flink.domain.PbSpan.SpanList getDefaultInstanceForType() {
                return com.demoo.btrace.flink.domain.PbSpan.SpanList.getDefaultInstance();
            }

            public com.demoo.btrace.flink.domain.PbSpan.SpanList build() {
                com.demoo.btrace.flink.domain.PbSpan.SpanList result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.demoo.btrace.flink.domain.PbSpan.SpanList buildPartial() {
                com.demoo.btrace.flink.domain.PbSpan.SpanList result = new com.demoo.btrace.flink.domain.PbSpan.SpanList(this);
                int from_bitField0_ = bitField0_;
                if (spansBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        spans_ = java.util.Collections.unmodifiableList(spans_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.spans_ = spans_;
                } else {
                    result.spans_ = spansBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.demoo.btrace.flink.domain.PbSpan.SpanList) {
                    return mergeFrom((com.demoo.btrace.flink.domain.PbSpan.SpanList) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.demoo.btrace.flink.domain.PbSpan.SpanList other) {
                if (other == com.demoo.btrace.flink.domain.PbSpan.SpanList.getDefaultInstance()) return this;
                if (spansBuilder_ == null) {
                    if (!other.spans_.isEmpty()) {
                        if (spans_.isEmpty()) {
                            spans_ = other.spans_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureSpansIsMutable();
                            spans_.addAll(other.spans_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.spans_.isEmpty()) {
                        if (spansBuilder_.isEmpty()) {
                            spansBuilder_.dispose();
                            spansBuilder_ = null;
                            spans_ = other.spans_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            spansBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getSpansFieldBuilder() : null;
                        } else {
                            spansBuilder_.addAllMessages(other.spans_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.demoo.btrace.flink.domain.PbSpan.SpanList parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.demoo.btrace.flink.domain.PbSpan.SpanList) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // repeated .idl.Span spans = 1;
            private java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span> spans_ =
                    java.util.Collections.emptyList();

            private void ensureSpansIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    spans_ = new java.util.ArrayList<com.demoo.btrace.flink.domain.PbSpan.Span>(spans_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    com.demoo.btrace.flink.domain.PbSpan.Span, com.demoo.btrace.flink.domain.PbSpan.Span.Builder, com.demoo.btrace.flink.domain.PbSpan.SpanOrBuilder> spansBuilder_;

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span> getSpansList() {
                if (spansBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(spans_);
                } else {
                    return spansBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public int getSpansCount() {
                if (spansBuilder_ == null) {
                    return spans_.size();
                } else {
                    return spansBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span getSpans(int index) {
                if (spansBuilder_ == null) {
                    return spans_.get(index);
                } else {
                    return spansBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public Builder setSpans(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span value) {
                if (spansBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSpansIsMutable();
                    spans_.set(index, value);
                    onChanged();
                } else {
                    spansBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public Builder setSpans(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Builder builderForValue) {
                if (spansBuilder_ == null) {
                    ensureSpansIsMutable();
                    spans_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    spansBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public Builder addSpans(com.demoo.btrace.flink.domain.PbSpan.Span value) {
                if (spansBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSpansIsMutable();
                    spans_.add(value);
                    onChanged();
                } else {
                    spansBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public Builder addSpans(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span value) {
                if (spansBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSpansIsMutable();
                    spans_.add(index, value);
                    onChanged();
                } else {
                    spansBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public Builder addSpans(
                    com.demoo.btrace.flink.domain.PbSpan.Span.Builder builderForValue) {
                if (spansBuilder_ == null) {
                    ensureSpansIsMutable();
                    spans_.add(builderForValue.build());
                    onChanged();
                } else {
                    spansBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public Builder addSpans(
                    int index, com.demoo.btrace.flink.domain.PbSpan.Span.Builder builderForValue) {
                if (spansBuilder_ == null) {
                    ensureSpansIsMutable();
                    spans_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    spansBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public Builder addAllSpans(
                    Iterable<? extends com.demoo.btrace.flink.domain.PbSpan.Span> values) {
                if (spansBuilder_ == null) {
                    ensureSpansIsMutable();
                    super.addAll(values, spans_);
                    onChanged();
                } else {
                    spansBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public Builder clearSpans() {
                if (spansBuilder_ == null) {
                    spans_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    spansBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public Builder removeSpans(int index) {
                if (spansBuilder_ == null) {
                    ensureSpansIsMutable();
                    spans_.remove(index);
                    onChanged();
                } else {
                    spansBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Builder getSpansBuilder(
                    int index) {
                return getSpansFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.SpanOrBuilder getSpansOrBuilder(
                    int index) {
                if (spansBuilder_ == null) {
                    return spans_.get(index);
                } else {
                    return spansBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public java.util.List<? extends com.demoo.btrace.flink.domain.PbSpan.SpanOrBuilder>
            getSpansOrBuilderList() {
                if (spansBuilder_ != null) {
                    return spansBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(spans_);
                }
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Builder addSpansBuilder() {
                return getSpansFieldBuilder().addBuilder(
                        com.demoo.btrace.flink.domain.PbSpan.Span.getDefaultInstance());
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public com.demoo.btrace.flink.domain.PbSpan.Span.Builder addSpansBuilder(
                    int index) {
                return getSpansFieldBuilder().addBuilder(
                        index, com.demoo.btrace.flink.domain.PbSpan.Span.getDefaultInstance());
            }

            /**
             * <code>repeated .idl.Span spans = 1;</code>
             */
            public java.util.List<com.demoo.btrace.flink.domain.PbSpan.Span.Builder>
            getSpansBuilderList() {
                return getSpansFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    com.demoo.btrace.flink.domain.PbSpan.Span, com.demoo.btrace.flink.domain.PbSpan.Span.Builder, com.demoo.btrace.flink.domain.PbSpan.SpanOrBuilder>
            getSpansFieldBuilder() {
                if (spansBuilder_ == null) {
                    spansBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            com.demoo.btrace.flink.domain.PbSpan.Span, com.demoo.btrace.flink.domain.PbSpan.Span.Builder, com.demoo.btrace.flink.domain.PbSpan.SpanOrBuilder>(
                            spans_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    spans_ = null;
                }
                return spansBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:idl.SpanList)
        }

        static {
            defaultInstance = new SpanList(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:idl.SpanList)
    }

    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_idl_Span_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_idl_Span_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_idl_Span_Pair_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_idl_Span_Pair_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_idl_Span_Log_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_idl_Span_Log_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_idl_SpanList_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_idl_SpanList_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\014pbSpan.proto\022\003idl\"\230\004\n\004Span\022\020\n\010parentId" +
                        "\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022\017\n\007traceId\030\003 \001(\t\022\034\n\004k" +
                        "ind\030\004 \001(\0162\016.idl.Span.Kind\022&\n\treference\030\005" +
                        " \001(\0162\023.idl.Span.Reference\022\014\n\004name\030\006 \001(\t\022" +
                        "\021\n\ttimestamp\030\007 \001(\022\022\020\n\010duration\030\010 \001(\022\022\023\n\013" +
                        "serviceName\030\t \001(\t\022\n\n\002ip\030\n \001(\007\022 \n\010baggage" +
                        "s\030\013 \003(\0132\016.idl.Span.Pair\022\034\n\004tags\030\014 \003(\0132\016." +
                        "idl.Span.Pair\022\033\n\004logs\030\r \003(\0132\r.idl.Span.L" +
                        "og\032\"\n\004Pair\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\0324" +
                        "\n\003Log\022\021\n\ttimestamp\030\001 \001(\022\022\013\n\003key\030\002 \001(\t\022\r\n",
                "\005value\030\003 \001(\t\"L\n\004Kind\022\n\n\006SERVER\020\000\022\n\n\006CLIE" +
                        "NT\020\001\022\014\n\010PRODUCER\020\002\022\014\n\010CONSUMER\020\003\022\020\n\014KIND" +
                        "_UNKNOWN\020\004\"B\n\tReference\022\014\n\010CHILD_OF\020\000\022\020\n" +
                        "\014FOLLOWS_FROM\020\001\022\025\n\021REFERENCE_UNKNOWN\020\002\"$" +
                        "\n\010SpanList\022\030\n\005spans\030\001 \003(\0132\t.idl.SpanB,\n\"" +
                        "com.guahao.gtrace.flink.entityB\006PbSp" +
                        "an"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        internal_static_idl_Span_descriptor =
                                getDescriptor().getMessageTypes().get(0);
                        internal_static_idl_Span_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_idl_Span_descriptor,
                                new String[]{"ParentId", "Id", "TraceId", "Kind", "Reference", "Name", "Timestamp", "Duration", "ServiceName", "Ip", "Baggages", "Tags", "Logs",});
                        internal_static_idl_Span_Pair_descriptor =
                                internal_static_idl_Span_descriptor.getNestedTypes().get(0);
                        internal_static_idl_Span_Pair_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_idl_Span_Pair_descriptor,
                                new String[]{"Key", "Value",});
                        internal_static_idl_Span_Log_descriptor =
                                internal_static_idl_Span_descriptor.getNestedTypes().get(1);
                        internal_static_idl_Span_Log_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_idl_Span_Log_descriptor,
                                new String[]{"Timestamp", "Key", "Value",});
                        internal_static_idl_SpanList_descriptor =
                                getDescriptor().getMessageTypes().get(1);
                        internal_static_idl_SpanList_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_idl_SpanList_descriptor,
                                new String[]{"Spans",});
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
    }

    // @@protoc_insertion_point(outer_class_scope)
}
